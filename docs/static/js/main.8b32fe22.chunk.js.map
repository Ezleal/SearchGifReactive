{"version":3,"sources":["components/AddCategory.js","helpers/callGifs.js","components/ImagesGifs.js","components/GetGifs.js","hooks/useFetchGifs.js","ReactSearch.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","placeholder","getGif","category","a","url","encodeURI","fetch","resp","json","data","dataMap","map","img","id","images","downsized","title","ImagesGifs","className","src","alt","GetGifs","loading","state","setState","useEffect","then","useFetchGifs","info","ReactSearch","categories","ReactDOM","render","document","getElementById"],"mappings":"8LAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAgB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAG1BR,EAAc,CAACE,IACfC,EAAc,MAKlB,SACI,uBACAM,KAAK,OACLC,MAAOR,EACPS,SAnBiB,SAACN,GACtBF,EAAcE,EAAEO,OAAOF,QAmBnBG,YAAY,8B,8BCxBPC,EAAM,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,gDACmCC,UAAUH,GAD7C,+DAECI,MAAOF,GAFR,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KACDC,EAAUD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACJC,GAAID,EAAIC,GACRT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,UAAUX,IAC3BY,MAAOJ,EAAII,UARF,kBAWXN,GAXW,4CAAH,sDCAVO,EAAa,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBG,EAAgB,EAAhBA,MAAOZ,EAAS,EAATA,IACnC,OACI,sBAAKc,UAAU,8CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMJ,IACvB,4BAAIA,QCFHK,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EAEhBd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ6B,mBAEnCC,EAFmC,KAE5BC,EAF4B,KAoB1C,OAbAC,qBAAU,WAENxB,EAAQC,GACPwB,MAAM,SAAAd,GACHY,EAAS,CACLf,KAAMG,EACNU,SAAS,SAInB,CAACpB,IAGIqB,EDjBkBI,CAAczB,GAA/BoB,EAF+B,EAE/BA,QAASb,EAFsB,EAEtBA,KAEb,OACJ,qCACI,oBAAIS,UAAU,0DAAd,SAAyEhB,IACnEoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGYT,EAAKE,KAAK,SAAAiB,GAAI,OAEb,cAAC,EAAD,eAEIA,GADCA,EAAKf,aEflBgB,EAAc,WAAO,IAAD,EACOzC,mBAAS,CAAE,UADlB,mBACtB0C,EADsB,KACV3C,EADU,KAM7B,OACI,qCACI,kDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,UCbzB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.8b32fe22.chunk.js","sourcesContent":["// import userEvent from '@testing-library/user-event';\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputValue = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            // setCategories(cats => [inputValue])\r\n            setCategories([inputValue])\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\" \r\n            value={inputValue}\r\n            onChange={handleInputValue}\r\n            placeholder=\"Busque su Gif favorito\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","    \r\n    \r\n    export const getGif = async(category)=>{\r\n        const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=20&api_key=XdV2OXrO5KxQJiFcJAFriDTK99IDJYfs`;\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n        const dataMap = data.map (img => {\r\n              return {\r\n                 id: img.id,\r\n                 url: img.images?.downsized.url,\r\n                 title: img.title\r\n              };    \r\n        })\r\n        return dataMap;\r\n    }","import React from 'react'\r\n\r\nexport const ImagesGifs = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__rubberBand \">\r\n            <img src={ url } alt={ title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useEffect, useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { ImagesGifs } from './ImagesGifs';\r\n\r\nexport const GetGifs = ({category}) => {\r\n    \r\nconst { loading, data} = useFetchGifs( category );\r\n\r\n    return (\r\n<>\r\n    <h3 className=\"card animate__animated animate__flip animate__delay-2s \">{category}</h3>\r\n        { loading && <p className=\"card animate__animated animate__flash\">Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    data.map (info => \r\n                    (\r\n                     <ImagesGifs \r\n                     key={info.id} \r\n                     {...info}/>\r\n                    ))\r\n                }\r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/callGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\nconst [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n});\r\n\r\nuseEffect(() => {\r\n\r\n    getGif( category )\r\n    .then (img => {\r\n        setState({\r\n            data: img,\r\n            loading: false\r\n        })\r\n    })\r\n\r\n},[category])\r\n\r\n\r\nreturn state;\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GetGifs } from './components/GetGifs';\r\n\r\nexport const ReactSearch = () => {\r\n    const [categories, setCategories] = useState([ 'Rocky' ]);\r\n    // const handleAdd = () => {\r\n    //     setCategories(cats => [...cats, 'Goku'] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>React Search App</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n            {\r\n                categories.map(category => (\r\n                    <GetGifs \r\n                    key={category}\r\n                    category={category}/>\r\n                ))\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ReactSearch } from './ReactSearch';\n\nReactDOM.render(\n    <ReactSearch />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}